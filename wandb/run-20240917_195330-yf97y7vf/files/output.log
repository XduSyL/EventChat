  0%|                                                                                                 | 0/4360 [00:00<?, ?it/s]/home/user/anaconda3/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/user/anaconda3/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
`use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`...
/home/user/anaconda3/envs/llava/lib/python3.10/site-packages/deepspeed/runtime/zero/stage_1_and_2.py:1652: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:83.)
  total_norm_cuda = get_accelerator().FloatTensor([float(total_norm)])
  0%|                                                                                      | 1/4360 [00:18<22:33:04, 18.62s/it]

  0%|                                                                                      | 2/4360 [00:35<21:34:50, 17.83s/it]

  0%|                                                                                      | 3/4360 [00:53<21:21:21, 17.65s/it]

  0%|                                                                                      | 4/4360 [01:10<21:16:55, 17.59s/it]
{'loss': 5.9454, 'learning_rate': 3.0534351145038166e-05, 'epoch': 0.0}

  0%|                                                                                      | 5/4360 [01:28<21:15:58, 17.58s/it]


  0%|▏                                                                                     | 7/4360 [02:03<21:19:08, 17.63s/it]

  0%|▏                                                                                     | 8/4360 [02:21<21:18:41, 17.63s/it]

  0%|▏                                                                                     | 9/4360 [02:38<21:17:39, 17.62s/it]
{'loss': 4.3414, 'learning_rate': 6.870229007633588e-05, 'epoch': 0.0}

  0%|▏                                                                                    | 10/4360 [02:56<21:18:54, 17.64s/it]Traceback (most recent call last):
  File "/data/SyL/Event_RGB/deepspeed_train.py", line 143, in <module>
    trainer.train()
  File "/home/user/anaconda3/envs/llava/lib/python3.10/site-packages/transformers/trainer.py", line 1539, in train
    return inner_training_loop(
  File "/home/user/anaconda3/envs/llava/lib/python3.10/site-packages/transformers/trainer.py", line 1929, in _inner_training_loop
    self._maybe_log_save_evaluate(tr_loss, model, trial, epoch, ignore_keys_for_eval)
  File "/home/user/anaconda3/envs/llava/lib/python3.10/site-packages/transformers/trainer.py", line 2302, in _maybe_log_save_evaluate
    self._save_checkpoint(model, trial, metrics=metrics)
  File "/home/user/anaconda3/envs/llava/lib/python3.10/site-packages/transformers/trainer.py", line 2378, in _save_checkpoint
    self.save_model(staging_output_dir, _internal_call=True)
  File "/home/user/anaconda3/envs/llava/lib/python3.10/site-packages/transformers/trainer.py", line 2873, in save_model
    self._save(output_dir, state_dict=state_dict)
  File "/home/user/anaconda3/envs/llava/lib/python3.10/site-packages/transformers/trainer.py", line 2958, in _save
    self.model.save_pretrained(
TypeError: EventChatModel.save_pretrained() got an unexpected keyword argument 'state_dict'